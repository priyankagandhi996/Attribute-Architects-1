---Calculate Paystub Procedure---

CREATE OR REPLACE PROCEDURE Calc_PayStub(
    p_TimesheetID IN INTEGER
)
IS
p_EmployeeID INT;
p_StubID INT;
p_Wage Float;
p_HoursWorked Float;
p_OTHoursWorked Float;
p_GrossPay FLOAT;
p_Deductions FLOAT;
p_NetPay FLOAT;

BEGIN

SELECT EmployeeID INTO p_EmployeeID FROM Timesheet WHERE TimeSheetID=p_TimeSheetID;
SELECT HoursWorked INTO p_HoursWorked FROM Timesheet WHERE TimeSheetID=p_TimeSheetID;
SELECT Wage INTO p_Wage FROM EMPLOYEEP WHERE EmployeeID=p_EmployeeID;

IF p_HoursWorked > 160 THEN
p_OTHoursWorked := p_HoursWorked-160;
ELSE
p_OTHoursWorked :=0;
END IF;

p_GrossPay := (p_HoursWorked*p_Wage)+(p_OTHoursWorked*(1.5*p_Wage));

p_Deductions := p_GrossPay*0.1;

p_NetPay := p_GrossPay-p_Deductions;

p_StubID := p_TimeSheetID+1000;

INSERT INTO PayStub (stubID, TimeSheetID, OTHoursWorked, GrossPay, Deductions, NetPay)
VALUES (p_StubID, p_TimeSheetID, p_OTHoursWorked, p_GrossPay, p_Deductions, p_NetPay); 

DBMS_OUTPUT.PUT_LINE('Pay Stub Record Added.');

END;

DROP TABLE PAYSTUB;

CREATE TABLE PAYSTUB
(
    StubID INT NOT NULL,
    TimeSheetID INT NOT NULL,
    OTHoursWorked FLOAT,
    GrossPay FLOAT,
    Deductions FLOAT,
    NetPay FLOAT,
    PRIMARY KEY (StubID),
    FOREIGN KEY (TimeSheetID) REFERENCES TIMESHEET(TimeSheetID)
);

set serveroutput on;
execute Calc_PayStub(1001);
execute Calc_PayStub(1002);
execute Calc_PayStub(1003);
execute Calc_PayStub(1004);
execute Calc_PayStub(1005);
execute Calc_PayStub(1006);
execute Calc_PayStub(1007);
execute Calc_PayStub(1008);
execute Calc_PayStub(1009);
execute Calc_PayStub(1010);
select * from paystub;
